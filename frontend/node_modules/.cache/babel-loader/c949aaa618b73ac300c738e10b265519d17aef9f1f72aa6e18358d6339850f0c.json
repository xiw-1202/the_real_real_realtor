{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log(`Response from ${response.config.url}:`, response.status);\n  return response;\n}, error => {\n  console.error('Response error:', error);\n  if (error.response) {\n    console.error('Error response:', error.response.data);\n  } else if (error.request) {\n    console.error('No response received:', error.request);\n  }\n  return Promise.reject(error);\n});\nexport const chatApi = {\n  // Send chat message\n  sendMessage: async message => {\n    try {\n      const response = await api.post('/chat', message);\n      return response.data;\n    } catch (error) {\n      console.error('Error sending chat message:', error);\n      throw new Error('Failed to send message. Please try again.');\n    }\n  },\n  // Get available topics\n  getTopics: async () => {\n    try {\n      const response = await api.get('/topics');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching topics:', error);\n      throw new Error('Failed to fetch topics');\n    }\n  },\n  // Submit feedback\n  submitFeedback: async feedback => {\n    try {\n      const response = await api.post('/feedback', feedback);\n      return response.data;\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n      throw new Error('Failed to submit feedback');\n    }\n  },\n  // Get system health\n  getHealth: async () => {\n    try {\n      const response = await api.get('/health');\n      return response.data;\n    } catch (error) {\n      console.error('Error checking system health:', error);\n      throw new Error('Failed to check system health');\n    }\n  },\n  // Get system statistics\n  getStats: async () => {\n    try {\n      const response = await api.get('/stats');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n      throw new Error('Failed to fetch statistics');\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","data","chatApi","sendMessage","message","post","Error","getTopics","get","submitFeedback","feedback","getHealth","getStats"],"sources":["/Users/sam/Documents/Projects/The Real Real Realty/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { ApiChatMessage, ApiChatResponse, TopicCategory, SystemHealth } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    console.log(`Response from ${response.config.url}:`, response.status);\n    return response;\n  },\n  (error) => {\n    console.error('Response error:', error);\n    \n    if (error.response) {\n      console.error('Error response:', error.response.data);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport const chatApi = {\n  // Send chat message\n  sendMessage: async (message: ApiChatMessage): Promise<ApiChatResponse> => {\n    try {\n      const response = await api.post<ApiChatResponse>('/chat', message);\n      return response.data;\n    } catch (error) {\n      console.error('Error sending chat message:', error);\n      throw new Error('Failed to send message. Please try again.');\n    }\n  },\n\n  // Get available topics\n  getTopics: async (): Promise<TopicCategory[]> => {\n    try {\n      const response = await api.get<TopicCategory[]>('/topics');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching topics:', error);\n      throw new Error('Failed to fetch topics');\n    }\n  },\n\n  // Submit feedback\n  submitFeedback: async (feedback: {\n    session_id: string;\n    message_id?: string;\n    rating: number;\n    feedback_text?: string;\n    feedback_type: string;\n  }): Promise<{ status: string; message: string }> => {\n    try {\n      const response = await api.post('/feedback', feedback);\n      return response.data;\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n      throw new Error('Failed to submit feedback');\n    }\n  },\n\n  // Get system health\n  getHealth: async (): Promise<SystemHealth> => {\n    try {\n      const response = await api.get<SystemHealth>('/health');\n      return response.data;\n    } catch (error) {\n      console.error('Error checking system health:', error);\n      throw new Error('Failed to check system health');\n    }\n  },\n\n  // Get system statistics\n  getStats: async (): Promise<any> => {\n    try {\n      const response = await api.get('/stats');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n      throw new Error('Failed to fetch statistics');\n    }\n  }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}